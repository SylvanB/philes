{"version":3,"sources":["Components/UploadArea/UploadArea.js","Services/FileApi.js","Components/Button/Button.js","Components/FileListItem/delete.svg","Components/FileListItem/FileListItem.js","Pages/Upload/Upload.js","Components/Header/Header.js","Pages/Browse/Browse.js","Pages/About/About.js","App.js","reportWebVitals.js","index.js"],"names":["UploadArea","dropRef","React","createRef","inputOpenFileRef","state","dragging","dragCount","updateFiles","current","files","length","filter","f","name","endsWith","size","slice","props","updateFileState","showOpenFileDlg","click","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dataTransfer","items","setState","handleDragOut","handleDrop","style","this","isActive","onClick","onChange","className","ref","hidden","type","multiple","children","div","addEventListener","removeEventListener","Component","FileApi","id","a","newFiles","file","formData","FormData","append","req","Request","method","body","fetch","then","resp","json","catch","err","uploadedFiles","console","log","Button","handleOnClick","value","FileListItem","handleDeleteClick","removeFile","keyValue","src","DeleteIcon","alt","Upload","fileApi","filesArr","fileName","updatedFileList","x","getFileListContent","alignSelf","listItems","push","uploadFiles","upsert","Header","to","Browse","About","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.801b5f24.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./UploadArea.scss\";\n\nclass UploadArea extends React.Component {\n    dropRef = React.createRef();\n    inputOpenFileRef = React.createRef();\n\n    state = {\n        dragging: false,\n        dragCount: 0,\n    };\n\n    render() {\n        let style = \"UploadAreaContainer\";\n        if (this.state.dragging) {\n            style += \" UploadAreaContainer-drag\";\n        }\n\n        if (!this.props.isActive) {\n            style += \" UploadAreaContainer-pointerActive\";\n        }\n\n        return (\n            <div\n                onClick={() => !this.props.isActive && this.showOpenFileDlg()}\n                onChange={this.updateFiles}\n                className={style}\n                ref={this.dropRef}>\n                <input\n                    hidden\n                    ref={this.inputOpenFileRef}\n                    type=\"file\"\n                    multiple={true}></input>\n                {this.props.children}\n            </div>\n        );\n    }\n\n    updateFiles = () => {\n        if (this.inputOpenFileRef.current.files?.length > 0) {\n            const files = [...this.inputOpenFileRef.current.files]\n                .filter(\n                    (f) => !f.name.endsWith(\".exe\") || f.size > 1024 * 1024 * 40\n                )\n                .slice(0, 5);\n\n            this.props.updateFileState(files);\n        }\n    };\n\n    showOpenFileDlg = () => {\n        this.inputOpenFileRef.current.click();\n    };\n\n    componentDidMount() {\n        let div = this.dropRef.current;\n        this.dragCount = 0;\n\n        div.addEventListener(\"dragenter\", this.handleDragIn);\n        div.addEventListener(\"dragleave\", this.handleDragOut);\n        div.addEventListener(\"dragover\", this.handleDrag);\n        div.addEventListener(\"drop\", this.handleDrop);\n    }\n\n    componentWillUnmount() {\n        let div = this.dropRef.current;\n\n        div.removeEventListener(\"dragenter\", this.handleDragIn);\n        div.removeEventListener(\"dragleave\", this.handleDragOut);\n        div.removeEventListener(\"dragover\", this.handleDrag);\n        div.removeEventListener(\"drop\", this.handleDrop);\n    }\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.dragCount += 1;\n        if (e.dataTransfer.items?.length > 0) {\n            this.setState({ dragging: true });\n        }\n    };\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.dragCount -= 1;\n        if (this.dragCount > 0) return;\n        this.setState({ dragging: false });\n    };\n\n    handleDrop = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.setState({ dragging: false });\n        if (e.dataTransfer.files?.length > 0) {\n            this.props.updateFileState(e.dataTransfer.files);\n        }\n        this.dragCount = 0;\n    };\n}\n\nexport default UploadArea;\n","class FileApi {\n    async getById(id) {\n        return {};\n    }\n\n    async getAll() {\n        return [{}, {}, {}];\n    }\n\n    async deleteById(id) {\n        return true;\n    }\n\n    async upsert(newFiles) {\n        // Use fetch w/ each file to send off to backend.\n\n        let formData = new FormData();\n\n        for (const file in newFiles) {\n            formData.append(`file${file}`, newFiles[file]);\n        }\n\n        let req = new Request(\"http://localhost:8000/files\", {\n            method: \"POST\",\n            body: formData,\n        });\n\n        let uploadedFiles = await fetch(req)\n            .then(async (resp) => {\n                return await resp.json();\n            })\n            .catch((err) => {\n                return false;\n            });\n\n        console.log(uploadedFiles);\n        return uploadedFiles;\n    }\n}\n\nexport default FileApi;\n","import React from \"react\";\nimport \"./Button.scss\";\n\nclass Button extends React.Component {\n    render() {\n        return (\n            <div className=\"button\" onClick={this.props.handleOnClick}>\n                {this.props.value}\n            </div>\n        );\n    }\n}\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/delete.918b1234.svg\";","import React from \"react\";\nimport DeleteIcon from \"./delete.svg\";\nimport \"./FileListItem.scss\";\n\nclass FileListItem extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            keyValue: props.keyValue,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"FileListItem\">\n                <img\n                    className=\"DeleteIcon UploadAreaContainer-pointerActive\"\n                    src={DeleteIcon}\n                    alt=\"Remove File\"\n                    onClick={this.handleDeleteClick}\n                />\n                <p className=\"FileTitle\">{this.props.name}</p>\n            </div>\n        );\n    }\n\n    handleDeleteClick = () => {\n        this.props.removeFile(this.state.keyValue);\n    };\n}\n\nexport default FileListItem;\n","import React from \"react\";\nimport \"./Upload.scss\";\nimport UploadArea from \"../../Components/UploadArea/UploadArea\";\nimport FileApi from \"../../Services/FileApi\";\nimport Button from \"../../Components/Button/Button\";\nimport FileListItem from \"../../Components/FileListItem/FileListItem\";\n\nclass Upload extends React.Component {\n    fileApi = new FileApi();\n\n    state = {\n        files: [],\n    };\n\n    render() {\n        return (\n            <div className=\"uploadPageContainer\">\n                <h2>Upload</h2>\n                <input\n                    hidden\n                    type=\"file\"\n                    id=\"fileInput\"\n                    ref={this.inputOpenFileRef}\n                />\n                <UploadArea\n                    isActive={this.state.files.length > 0}\n                    updateFileState={this.updateFileState}>\n                    <div className=\"FileList\">{this.getFileListContent()}</div>\n                </UploadArea>\n                <Button value=\"Upload\" handleOnClick={this.uploadFiles} />\n            </div>\n        );\n    }\n\n    updateFileState = (files) => {\n        const filesArr = [...files];\n        this.setState({ files: filesArr });\n    };\n\n    removeFile = (fileName) => {\n        const updatedFileList = [...this.state.files].filter(\n            (x) => x.name !== fileName\n        );\n\n        this.setState({ files: updatedFileList });\n    };\n\n    getFileListContent = () => {\n        if (this.state.files?.length <= 0) {\n            return (\n                <p style={{ alignSelf: \"center\" }}>\n                    Drag the file(s) you want to upload here, or click here to\n                    choose a file.\n                </p>\n            );\n        }\n\n        let listItems = [];\n        for (const file of this.state.files) {\n            listItems.push(\n                <FileListItem\n                    key={file.name}\n                    keyValue={file.name}\n                    removeFile={this.removeFile}\n                    name={file.name}\n                />\n            );\n        }\n        return listItems;\n    };\n\n    uploadFiles = async () => {\n        if (this.state.files?.length > 0) {\n            this.fileApi.upsert(this.state.files);\n            this.setState({\n                files: [],\n            });\n        }\n    };\n}\n\nexport default Upload;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.scss\";\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header className=\"AppHeader\">\n                <h1>Philes.rs</h1>\n                <div className=\"NavBar\">\n                    <div className=\"NavItem\">\n                        <Link to=\"/\">Upload</Link>\n                    </div>\n                    <div className=\"NavItem\">\n                        <Link to=\"/browse\">Browse</Link>\n                    </div>\n                    <div className=\"NavItem\">\n                        <Link to=\"/about\">About</Link>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React from \"react\";\n\nclass Browse extends React.Component {\n    render() {\n        return <h2>Browse</h2>;\n    }\n}\n\nexport default Browse;\n","import React from \"react\";\n\nclass About extends React.Component {\n    render() {\n        return <h2>About Philes.rs</h2>;\n    }\n}\n\nexport default About;\n","import React from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Upload from \"./Pages/Upload/Upload\";\nimport Header from \"./Components/Header/Header\";\nimport Browse from \"./Pages/Browse/Browse\";\nimport About from \"./Pages/About/About\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Header />\n                    <Switch>\n                        <Route path=\"/\" exact component={Upload} />\n                        <Route path=\"/browse\" exact component={Browse} />\n                        <Route path=\"/about\" exact component={About} />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}